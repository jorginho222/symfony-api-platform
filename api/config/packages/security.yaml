security:
    encoders:
        App\Entity\User:
            algorithm: auto

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        user_provider:
            id: App\Security\Core\User\UserProvider
    firewalls:
        register:
            pattern: ^/api/v1/users/register
            methods: [POST]
            # En estos casos es una excepcion, no va a requerir auth para entrar a estas uri
            security: false
        resend_activation_email:
            pattern: ^/api/v1/users/resend_activation_email
            methods: [POST]
            security: false
        activate_user:
            pattern: ^/api/v1/users/{id}/activate
            methods: [PUT]
            security: false
        docs:
            pattern: ^/api/v1/docs
            methods: [GET]
            security: false
        request_reset_password:
            pattern: ^/api/v1/users/request_reset_password
            methods: [POST]
            security: false
        reset_password:
            pattern: ^/api/v1/users/
            methods: [ PUT ]
            security: false
        login:
            pattern: /api/v1/users/login
            # No se va a guardar la sesion
            stateless: true
            provider: user_provider
            json_login:
              check_path: /api/v1/users/login_check
              success_handler: lexik_jwt_authentication.handler.authentication_success
              failure_handler: lexik_jwt_authentication.handler.authentication_failure
              require_previous_session: false
        facebook_auth:
            pattern: ^/api/v1/users/facebook/auth
            methods: [POST]
            security: false

        api:
          pattern: ^/api/v1
          stateless: true
          guard:
            authenticators:
              - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/api/v1, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
